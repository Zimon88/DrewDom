/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.isimon.drewdom.gui;

import java.awt.Component;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import pl.isimon.drewdom.gui.models.TableModelZamowieniePozycja;
import pl.isimon.drewdom.gui.models.TableModelMebleLista;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pl.isimon.drewdom.Mebel;
import pl.isimon.drewdom.Zamowienie;
import pl.isimon.drewdom.ZamowieniePozycja;
import pl.isimon.drewdom.gui.utils.TableColumnAdjuster;

/**
 *
 * @author Simon
 */
public class GZamowienieNew extends javax.swing.JPanel {

    private boolean edycja = false;
    
    
    /**
     * Creates new form GZamowienieNew
     */
    private Zamowienie zamowienie;
    private Mebel mebel;
    private TableModelMebleLista tmml;
    private TableModelZamowieniePozycja tmzp;
    private ArrayList<ZamowieniePozycja> zamowienieLista;
    private ZamowieniePozycja pozycja;
    private TableColumnAdjuster tca;
    private TableColumnAdjuster tca1;
    private Object OptionPane;
    
    public GZamowienieNew() {
        initComponents();
        mebel = new Mebel();
        pozycja = new ZamowieniePozycja();
        tmzp = (TableModelZamowieniePozycja)tableZamowienie.getModel();
        tmml = (TableModelMebleLista)tableMeble.getModel();
        tca = new TableColumnAdjuster(tableMeble);
        tca1 = new TableColumnAdjuster(tableZamowienie);
        tca.adjustColumns();
        tca1.adjustColumns();
    }
    
    public GZamowienieNew(ArrayList<Mebel> lista){
        this();
        zamowienieLista = new ArrayList();
        zamowienie = new Zamowienie();
        tmml.setModelData(lista);
        tmzp.setModelData(zamowienieLista);
        tca.adjustColumns();
        tca1.adjustColumns();
    }

    public boolean isEdycja() {
        return edycja;
    }

    public void setEdycja(boolean edycja) {
        this.edycja = edycja;
        textNumer.setEnabled(!edycja);
    }
    
    
    
    public void save(){
        if(edycja){
            zamowienie.edytuj(textNumer.getText(),dcDataZamowienia.getDate(),dcDataRealizaji.getDate());
        } else {
            zamowienie.zapiszZamowienie(textNumer.getText(), zamowienieLista, dcDataZamowienia.getDate(), dcDataRealizaji.getDate());
        }
        
    }
    
    public void clear(){
        zamowienieLista = new ArrayList();
        tmzp.setModelData(zamowienieLista);
        textNumer.setText("");
        dcDataZamowienia.setDate(null);
        dcDataRealizaji.setDate(null);
    }
    
    public void loadData(Zamowienie z){
        zamowienie = z;
        zamowienieLista = pozycja.getPozycjeZamowienia(z.numer);
        tmzp.setModelData(zamowienieLista);
        tmml.setModelData(mebel.getData());
        textNumer.setText(z.numer);
        DateFormat formatter ; 
        formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {
            if(z.dataRealizacji!=null & !z.dataRealizacji.equals("")){
                dcDataRealizaji.setDate((Date)formatter.parse(z.dataRealizacji));
            }
            if(z.data!=null & !z.data.equals("")){
                dcDataZamowienia.setDate((Date)formatter.parse(z.data));
            }
        } catch (ParseException ex) {
            Logger.getLogger(GZamowienieNew.class.getName()).log(Level.SEVERE, null, ex);
        }
        tca.adjustColumns();
        tca1.adjustColumns();
    }
    
    private void search(){
        String numer = textNumerM.getText();
        String nazwa = textNazwaM.getText();
        String kod = textKodM.getText();
        tmml.setModelData(mebel.getData(numer,nazwa,kod));
        tca.adjustColumns();
        tca1.adjustColumns();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableZamowienie = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMeble = new javax.swing.JTable();
        buttonDodaj = new javax.swing.JButton();
        labelSztuk = new javax.swing.JLabel();
        textNumerM = new javax.swing.JTextField();
        textNazwaM = new javax.swing.JTextField();
        textNumer = new javax.swing.JTextField();
        labelNumer = new javax.swing.JLabel();
        dcDataZamowienia = new com.toedter.calendar.JDateChooser();
        dcDataRealizaji = new com.toedter.calendar.JDateChooser();
        labelDataZamowienia = new javax.swing.JLabel();
        labelDataRealizacji = new javax.swing.JLabel();
        buttonSzukaj = new javax.swing.JButton();
        labelNumerM = new javax.swing.JLabel();
        labelNazwa = new javax.swing.JLabel();
        buttonUsun = new javax.swing.JButton();
        spinnerSztuk = new javax.swing.JSpinner();
        labelKodM = new javax.swing.JLabel();
        textKodM = new javax.swing.JTextField();
        buttonZmienIlosc = new javax.swing.JButton();
        spinnerIlosc = new javax.swing.JSpinner();

        setMinimumSize(new java.awt.Dimension(620, 515));
        setPreferredSize(new java.awt.Dimension(620, 515));

        tableZamowienie.setModel(new TableModelZamowieniePozycja());
        jScrollPane1.setViewportView(tableZamowienie);

        tableMeble.setModel(new TableModelMebleLista());
        jScrollPane2.setViewportView(tableMeble);

        buttonDodaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/isimon/drewdom/gui/images/x16/button_ok.png"))); // NOI18N
        buttonDodaj.setText("Dodaj");
        buttonDodaj.setFocusPainted(false);
        buttonDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDodajActionPerformed(evt);
            }
        });

        labelSztuk.setText("Sztuk");

        textNumerM.setToolTipText("Numer katalogowy");
        textNumerM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumerMActionPerformed(evt);
            }
        });

        textNazwaM.setToolTipText("Nazwa");
        textNazwaM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNazwaMActionPerformed(evt);
            }
        });

        labelNumer.setText("Numer zamówienia");

        labelDataZamowienia.setText("Data złożenia zamówienia");

        labelDataRealizacji.setText("Data realizacji");

        buttonSzukaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/isimon/drewdom/gui/images/x16/viewmag.png"))); // NOI18N
        buttonSzukaj.setText("Szukaj");
        buttonSzukaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSzukajActionPerformed(evt);
            }
        });

        labelNumerM.setText("Numer");

        labelNazwa.setText("Nazwa");

        buttonUsun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/isimon/drewdom/gui/images/x16/edittrash.png"))); // NOI18N
        buttonUsun.setText("Usuń");
        buttonUsun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUsunActionPerformed(evt);
            }
        });

        spinnerSztuk.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999, 1));

        labelKodM.setText("Kod");

        textKodM.setToolTipText("Kod kreskowy");
        textKodM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textKodMActionPerformed(evt);
            }
        });

        buttonZmienIlosc.setText("Zmień Ilość");
        buttonZmienIlosc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonZmienIloscActionPerformed(evt);
            }
        });

        spinnerIlosc.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), null, null, Integer.valueOf(1)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelNumer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textNumer, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(labelDataZamowienia))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(labelDataRealizacji)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcDataRealizaji, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcDataZamowienia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelSztuk)
                        .addGap(18, 18, 18)
                        .addComponent(spinnerSztuk, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDodaj))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelNumerM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNumerM, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelNazwa)
                        .addGap(18, 18, 18)
                        .addComponent(textNazwaM, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(spinnerIlosc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonZmienIlosc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonUsun))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelKodM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textKodM, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonSzukaj)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonDodaj, buttonSzukaj, buttonUsun});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textNumer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelNumer)
                        .addComponent(labelDataZamowienia))
                    .addComponent(dcDataZamowienia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcDataRealizaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDataRealizacji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUsun)
                    .addComponent(buttonZmienIlosc)
                    .addComponent(spinnerIlosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumerM)
                    .addComponent(textNumerM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNazwa)
                    .addComponent(textNazwaM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSzukaj)
                    .addComponent(labelKodM)
                    .addComponent(textKodM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDodaj)
                    .addComponent(labelSztuk)
                    .addComponent(spinnerSztuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDodajActionPerformed
        int selection = tableMeble.getSelectedRow();
        int sztuk = (int)spinnerSztuk.getModel().getValue();
        int[] selectedRows = tableMeble.getSelectedRows();
        if (selectedRows.length>1) {
            if(sztuk!=0) {
                for(int i = 0; i<selectedRows.length;i++){
                    ZamowieniePozycja poz = new ZamowieniePozycja();
                    poz.ilosc = sztuk;
                    poz.mebel = tmml.getMebel(i);
                    tmzp.addZamowieniePozycja(poz);
                    if(edycja) {
                        poz.dodaj(textNumer.getText(), poz);
                    }
                }
            }
        } else {
            if(sztuk!=0 & selection!=-1){
                ZamowieniePozycja poz = new ZamowieniePozycja();
                poz.ilosc = sztuk;
                poz.mebel = tmml.getMebel(selection);
                tmzp.addZamowieniePozycja(poz);
                if(edycja) {
                    poz.dodaj(textNumer.getText(), poz);
                }
            }
        }
        spinnerSztuk.getModel().setValue(new Integer(0));
    }//GEN-LAST:event_buttonDodajActionPerformed

    private void buttonUsunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUsunActionPerformed
        int selection = tableZamowienie.getSelectedRow();
        if(selection!=-1){
            int[] selectedRows = tableZamowienie.getSelectedRows();
            for(int i=0;i<selectedRows.length;i++){
                ZamowieniePozycja zamp;
                zamp = tmzp.getZamowieniePozycja(selectedRows[i]);
                zamowienieLista.remove(zamp);
                tmzp.removeZamowieniePozycja(zamp);
                if(edycja) {
                    zamp.usun(zamp);
                }
            }
        }
        
    }//GEN-LAST:event_buttonUsunActionPerformed

    private void buttonSzukajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSzukajActionPerformed
        search();
    }//GEN-LAST:event_buttonSzukajActionPerformed

    private void textNumerMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumerMActionPerformed
        search();
    }//GEN-LAST:event_textNumerMActionPerformed

    private void textNazwaMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNazwaMActionPerformed
        search();
    }//GEN-LAST:event_textNazwaMActionPerformed

    private void textKodMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textKodMActionPerformed
        search();
    }//GEN-LAST:event_textKodMActionPerformed

    private void buttonZmienIloscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonZmienIloscActionPerformed
        int selection = tableZamowienie.getSelectedRow();
        int sztuk = (int)spinnerIlosc.getModel().getValue();
        int[] selectedRows = tableMeble.getSelectedRows();
        if (selectedRows.length>1){
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
            "Zaznacz tylko jeden element!",
            "Wielokrotne Zaznaczenie",
            JOptionPane.ERROR_MESSAGE);
        } else {
            ZamowieniePozycja zamp;
            zamp = tmzp.getZamowieniePozycja(selection);
            zamp.ilosc = sztuk;
                tmzp.updateIlosc(selection, zamp);
            if(edycja) {
                zamp.edytujIlosc(zamp, sztuk);
            } 
            tmzp.fireTableDataChanged();
        }
    }//GEN-LAST:event_buttonZmienIloscActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDodaj;
    private javax.swing.JButton buttonSzukaj;
    private javax.swing.JButton buttonUsun;
    private javax.swing.JButton buttonZmienIlosc;
    private com.toedter.calendar.JDateChooser dcDataRealizaji;
    private com.toedter.calendar.JDateChooser dcDataZamowienia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDataRealizacji;
    private javax.swing.JLabel labelDataZamowienia;
    private javax.swing.JLabel labelKodM;
    private javax.swing.JLabel labelNazwa;
    private javax.swing.JLabel labelNumer;
    private javax.swing.JLabel labelNumerM;
    private javax.swing.JLabel labelSztuk;
    private javax.swing.JSpinner spinnerIlosc;
    private javax.swing.JSpinner spinnerSztuk;
    private javax.swing.JTable tableMeble;
    private javax.swing.JTable tableZamowienie;
    private javax.swing.JTextField textKodM;
    private javax.swing.JTextField textNazwaM;
    private javax.swing.JTextField textNumer;
    private javax.swing.JTextField textNumerM;
    // End of variables declaration//GEN-END:variables

    public void loadData() {
        tmml.setModelData((new Mebel()).getData());
    }
}
